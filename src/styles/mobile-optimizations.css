/* NeuraFit Mobile Optimizations */

/* Enhanced Viewport Height Support */
html, body {
  height: 100%;
  height: 100vh;
  height: 100dvh; /* Dynamic viewport height for modern browsers */
}

/* iOS specific viewport fixes */
@supports (-webkit-touch-callout: none) {
  html, body {
    height: -webkit-fill-available;
  }
}

/* Prevent content from scrolling below fixed controls */
.neurafit-content-with-fixed-controls {
  overscroll-behavior: contain;
  -webkit-overflow-scrolling: touch;
}

/* Fixed controls positioning */
.neurafit-fixed-controls {
  position: fixed !important;
  bottom: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: 1000 !important;
}

/* Global mobile optimizations */
@media (max-width: 768px) {
  /* Prevent zoom on input focus for iOS */
  input[type="text"],
  input[type="email"],
  input[type="password"],
  input[type="number"],
  textarea,
  select {
    font-size: 16px !important;
    -webkit-appearance: none;
    -webkit-border-radius: 0;
    border-radius: 0;
  }

  /* Improve touch scrolling */
  * {
    -webkit-overflow-scrolling: touch;
    overscroll-behavior: contain;
  }

  /* Disable text selection on buttons and interactive elements */
  button,
  .chakra-button,
  [role="button"] {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation;
  }

  /* Optimize animations for mobile */
  * {
    will-change: auto;
  }

  /* Only animate transform and opacity for better performance */
  .chakra-button,
  .chakra-card,
  .chakra-modal,
  .chakra-drawer {
    will-change: transform, opacity;
  }
}

/* NeuraFit specific mobile optimizations */
.neurafit-scroll-container {
  /* Smooth scrolling with momentum */
  -webkit-overflow-scrolling: touch;
  overscroll-behavior: contain;
  scroll-behavior: smooth;
}

@media (max-width: 768px) {
  .neurafit-scroll-container {
    /* Prevent rubber band scrolling */
    overscroll-behavior-y: none;
    /* Optimize for mobile scrolling */
    scroll-snap-type: y proximity;
  }

  /* Workout execution mobile optimizations */
  .neurafit-workout-active {
    /* Prevent background scrolling during workout */
    position: fixed;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  /* Fixed button containers */
  .neurafit-fixed-controls {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: white;
    border-top: 1px solid #e2e8f0;
    padding: 1rem;
    padding-bottom: calc(env(safe-area-inset-bottom, 0px) + 1rem);
    box-shadow: 0 -4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  /* Ensure content doesn't get hidden behind fixed elements */
  .neurafit-content-with-fixed-controls {
    padding-bottom: 120px;
  }

  /* Optimize card layouts for mobile */
  .neurafit-card {
    margin: 0.5rem;
    border-radius: 1rem;
  }

  /* Touch-friendly button sizing */
  .neurafit-touch-button {
    min-height: 48px;
    min-width: 48px;
    padding: 0.75rem 1rem;
  }

  /* Optimize form inputs */
  .neurafit-form-input {
    min-height: 48px;
    font-size: 16px;
    padding: 0.75rem;
    border-radius: 0.75rem;
  }

  /* Optimize text areas */
  .neurafit-textarea {
    min-height: 80px;
    font-size: 16px;
    padding: 0.75rem;
    border-radius: 0.75rem;
    resize: vertical;
  }
}

/* Landscape mobile optimizations */
@media (max-width: 768px) and (orientation: landscape) {
  .neurafit-scroll-container {
    /* Reduce padding in landscape for more content visibility */
    padding-top: 0.5rem;
    padding-bottom: 100px;
  }

  .neurafit-fixed-controls {
    /* Smaller controls in landscape */
    padding: 0.75rem;
    padding-bottom: calc(env(safe-area-inset-bottom, 0px) + 0.75rem);
  }

  /* Compact button layout in landscape */
  .neurafit-touch-button {
    min-height: 44px;
    padding: 0.5rem 0.75rem;
  }
}

/* High DPI display optimizations */
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  /* Ensure crisp borders and shadows */
  .neurafit-card,
  .chakra-card {
    border-width: 0.5px;
  }

  .neurafit-fixed-controls {
    border-top-width: 0.5px;
  }
}

/* Reduce motion for users who prefer it */
@media (prefers-reduced-motion: reduce) {
  .neurafit-scroll-container,
  .chakra-button,
  .chakra-card,
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Dark mode support (if needed in future) */
@media (prefers-color-scheme: dark) {
  .neurafit-fixed-controls {
    background: #1a202c;
    border-top-color: #2d3748;
  }
}

/* Safe area support for newer devices */
@supports (padding: max(0px)) {
  .neurafit-fixed-controls {
    padding-left: max(1rem, env(safe-area-inset-left));
    padding-right: max(1rem, env(safe-area-inset-right));
    padding-bottom: max(1rem, env(safe-area-inset-bottom));
  }

  .neurafit-scroll-container {
    padding-left: max(0.75rem, env(safe-area-inset-left));
    padding-right: max(0.75rem, env(safe-area-inset-right));
  }
}

/* Focus management for mobile */
@media (max-width: 768px) {
  /* Ensure focus is visible but not intrusive on mobile */
  .chakra-button:focus,
  .chakra-input:focus,
  .chakra-textarea:focus {
    outline: 2px solid #4299e1;
    outline-offset: 2px;
  }

  /* Hide focus outline when using touch */
  .js-focus-visible .chakra-button:focus:not(.focus-visible),
  .js-focus-visible .chakra-input:focus:not(.focus-visible),
  .js-focus-visible .chakra-textarea:focus:not(.focus-visible) {
    outline: none;
  }
}

/* Performance optimizations */
.neurafit-performance-optimized {
  /* Use GPU acceleration for smooth animations */
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Prevent layout shifts */
.neurafit-stable-layout {
  contain: layout style paint;
}

/* Optimize images for mobile */
@media (max-width: 768px) {
  img {
    max-width: 100%;
    height: auto;
    /* Prevent layout shifts */
    aspect-ratio: attr(width) / attr(height);
  }
}
