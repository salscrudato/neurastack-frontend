apiVersion: apps/v1
kind: Deployment
metadata:
  name: neurastack-frontend
  namespace: neurastack-staging
  labels:
    app: neurastack-frontend
    environment: staging
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: neurastack-frontend
  template:
    metadata:
      labels:
        app: neurastack-frontend
        environment: staging
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: neurastack-frontend
        image: ghcr.io/salscrudato/neurastack-frontend:develop-latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "staging"
        - name: VITE_API_URL
          valueFrom:
            configMapKeyRef:
              name: neurastack-config
              key: api-url
        - name: VITE_FIREBASE_CONFIG
          valueFrom:
            secretKeyRef:
              name: neurastack-secrets
              key: firebase-config
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      securityContext:
        fsGroup: 1001

---
apiVersion: v1
kind: Service
metadata:
  name: neurastack-frontend-service
  namespace: neurastack-staging
  labels:
    app: neurastack-frontend
    environment: staging
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: neurastack-frontend

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: neurastack-frontend-ingress
  namespace: neurastack-staging
  labels:
    app: neurastack-frontend
    environment: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
spec:
  tls:
  - hosts:
    - staging.neurastack.app
    secretName: neurastack-staging-tls
  rules:
  - host: staging.neurastack.app
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: neurastack-frontend-service
            port:
              number: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: neurastack-config
  namespace: neurastack-staging
  labels:
    app: neurastack-frontend
    environment: staging
data:
  api-url: "https://staging-neurastack-backend.run.app"
  environment: "staging"

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: neurastack-frontend-pdb
  namespace: neurastack-staging
  labels:
    app: neurastack-frontend
    environment: staging
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: neurastack-frontend

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: neurastack-frontend-hpa
  namespace: neurastack-staging
  labels:
    app: neurastack-frontend
    environment: staging
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: neurastack-frontend
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
